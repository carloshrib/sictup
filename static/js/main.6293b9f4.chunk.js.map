{"version":3,"sources":["App.js","index.js"],"names":["App","useState","getData","setData","getLoading","setLoading","fetchData","useCallback","a","axios","get","data","temperatures","Object","values","Temperatura","reverse","humidities","Umidade","datetimes","Horario","groundHumidities","UmidadeSolo","parsedData","map","item","index","temperature","humidity","datetime","groundHumidity","useEffect","columnStyle","maxWidth","display","alignItems","justifyContent","fontSize","tableColumns","name","selector","row","style","className","onClick","title","columns","pagination","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","noRowsPerPage","paginationPerPage","responsive","noDataComponent","progressPending","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA6GeA,MApGf,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAYC,sBAAW,sBAAC,wCAAAC,EAAA,sEACPC,IAAMC,IATV,6GAQW,gBACrBC,EADqB,EACrBA,KACPN,GAAW,GACLO,EAAeC,OAAOC,OAAOH,EAAKI,aAAaC,UAC/CC,EAAaJ,OAAOC,OAAOH,EAAKO,SAASF,UACzCG,EAAYN,OAAOC,OAAOH,EAAKS,SAASJ,UACxCK,EAAmBR,OAAOC,OAAOH,EAAKW,aAAaN,UAEnDO,EAAaX,EAAaY,KAAI,SAACC,EAAMC,GASzC,MARiC,CAC/BC,YAAaF,EACbG,SAAUX,EAAWS,GACrBG,SAAUV,EAAUO,IAAU,MAC9BI,eAAgBT,EAAiBK,IAAU,UAO/CvB,EAAQoB,GACRlB,GAAW,GArBiB,4CAsB3B,IAGL0B,qBAAU,WACRzB,MACC,CAACA,IAGF,IAAM0B,EAAc,CAChBC,SAAU,OACVC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,SAAU,QAGRC,EAAe,CACnB,CACIC,KAAM,cACNC,SAAU,SAAAC,GAAG,OAAIA,EAAId,aACrBe,MAAOV,GAEX,CACIO,KAAM,UACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIb,UACrBc,MAAOV,GAEX,CACEO,KAAM,eACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIX,gBACrBY,MAAOV,GAET,CACEO,KAAM,aACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIZ,UACrBa,MAAOV,IAYX,OACE,sBAAKW,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACI,0CAEF,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,wBAAQA,UAAU,oBAAoBC,QAAStC,EAA/C,+BAEF,cAAC,IAAD,CACEuC,MAAM,mBACNC,QAASR,EACT3B,KAAMT,EACN6C,YAAU,EACVC,2BAvBuB,CACjCC,gBAAiB,sBACjBC,mBAAoB,KACpBC,eAAe,GAqBLC,kBAAmB,GACnBC,YAAU,EACVC,gBAAgB,kCAChBC,gBAAiBnD,aC/F/BoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6293b9f4.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport DataTable from 'react-data-table-component';\n\nconst DATABASE_URL = 'https://sictup-752d5-default-rtdb.firebaseio.com/DHT11.json?auth=X8qgzJeTWtD9bW5d7RkCxHoUdMDfrhtQvOQkEbIv';\n\n\n\nfunction App() {\n  const [getData, setData] = useState([]);\n  const [getLoading, setLoading] = useState(true);\n\n  const fetchData = useCallback(async () => {\n    const {data} = await axios.get(DATABASE_URL);\n    setLoading(true)\n    const temperatures = Object.values(data.Temperatura).reverse();\n    const humidities = Object.values(data.Umidade).reverse();\n    const datetimes = Object.values(data.Horario).reverse();\n    const groundHumidities = Object.values(data.UmidadeSolo).reverse();\n\n    const parsedData = temperatures.map((item, index) => {\n      const temperaturesAndHumidites = {\n        temperature: item,\n        humidity: humidities[index],\n        datetime: datetimes[index] || '---',\n        groundHumidity: groundHumidities[index] || '---',\n\n      }\n\n      return temperaturesAndHumidites;\n    })\n    \n    setData(parsedData);\n    setLoading(false)\n  }, [])\n\n  \nuseEffect(() => {\n  fetchData();\n}, [fetchData])\n\n  \n  const columnStyle = {\n      maxWidth: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: '16px',\n  }\n\n  const tableColumns = [\n    {\n        name: 'Temperatura',\n        selector: row => row.temperature,\n        style: columnStyle,\n    },\n    {\n        name: 'Umidade',\n        selector: row => row.humidity,\n        style: columnStyle,\n    },\n    {\n      name: 'Umidade Solo',\n      selector: row => row.groundHumidity,\n      style: columnStyle,\n  },\n    {\n      name: 'Horário',\n      selector: row => row.datetime,\n      style: columnStyle,\n    },\n  ];\n\n  const paginationComponentOptions = {\n    rowsPerPageText: 'Dados por página',\n    rangeSeparatorText: 'de',\n    noRowsPerPage: true,\n    \n};\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n          <h1>SICTUP</h1>\n      </div>\n        <div className=\"content\">\n          <div className=\"tableContent\">\n            <div className=\"tableButtonsContent\">\n              <button className=\"refreshDataButton\" onClick={fetchData}>Atualizar Dados</button>\n            </div>\n            <DataTable\n              title=\"Dados coletados:\"\n              columns={tableColumns}\n              data={getData}\n              pagination\n              paginationComponentOptions={paginationComponentOptions}\n              paginationPerPage={10}\n              responsive\n              noDataComponent=\"Nenhum dado ainda foi coletado.\"\n              progressPending={getLoading}\n            />\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}