{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","getData","setData","fetchData","a","axios","get","data","temperatures","Object","values","Temperatura","reverse","slice","humidities","Umidade","parsedData","map","item","index","temperature","humidity","useEffect","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQA8DeA,MAvDf,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAS,uCAAG,oCAAAC,EAAA,sEACKC,IAAMC,IARV,6GAOD,gBACTC,EADS,EACTA,KACDC,EAAeC,OAAOC,OAAOH,EAAKI,aAAaC,UAAUC,MAAM,EAAG,IAClEC,EAAaL,OAAOC,OAAOH,EAAKQ,SAASH,UAAUC,MAAM,EAAG,IAC5DG,EAAaR,EAAaS,KAAI,SAACC,EAAMC,GAMzC,MALiC,CAC/BC,YAAaF,EACbG,SAAUP,EAAWK,OAMzBjB,EAAQc,GAbQ,2CAAH,qDAqBf,OAJFM,qBAAU,WACRnB,MACC,IAGC,sBAAKoB,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACI,0CAEF,qBAAKA,UAAU,UAAf,SACE,wBAAOA,UAAU,YAAjB,UACE,gCACE,+BACE,6BAAI,gDACJ,6BAAI,iDAGR,gCACGtB,EAAQgB,KAAI,SAACC,EAAMC,GAAP,OACX,+BACE,6BACE,8BAAMD,EAAKE,gBAEb,6BACE,8BAAMF,EAAKG,eALNF,iBClCVK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d5a13f2.chunk.js","sourcesContent":["import './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nconst DATABASE_URL = 'https://sictup-752d5-default-rtdb.firebaseio.com/DHT11.json?auth=X8qgzJeTWtD9bW5d7RkCxHoUdMDfrhtQvOQkEbIv';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [getData, setData] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const {data} = await axios.get(DATABASE_URL);\r\n    const temperatures = Object.values(data.Temperatura).reverse().slice(0, 15);\r\n    const humidities = Object.values(data.Umidade).reverse().slice(0, 15);\r\n    const parsedData = temperatures.map((item, index) => {\r\n      const temperaturesAndHumidites = {\r\n        temperature: item,\r\n        humidity: humidities[index]\r\n      }\r\n\r\n      return temperaturesAndHumidites;\r\n    })\r\n\r\n    setData(parsedData);\r\n  } \r\n  \r\n\r\nuseEffect(() => {\r\n  fetchData();\r\n}, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\">\r\n          <h1>SICTUP</h1>\r\n      </div>\r\n        <div className=\"content\">\r\n          <table className=\"dataTable\">\r\n            <thead>\r\n              <tr>\r\n                <th><div>Temperatura</div></th>\r\n                <th><div>Umidade</div></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getData.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>\r\n                    <div>{item.temperature}</div>\r\n                  </td>\r\n                  <td>\r\n                    <div>{item.humidity}</div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}